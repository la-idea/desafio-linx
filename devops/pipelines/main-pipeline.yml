trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

jobs:

## Infrastructure

- job: ProvisionInfrastructure
  displayName: 'Provisionar Infraestrutura com Terraform'
  pool:
    vmImage: 'ubuntu-latest'
  container:
    image: 'hashicorp/terraform:1.9'
  steps:
  - script: |
      terraform init devops/terraform/
      terraform apply -auto-approve devops/terraform/ | tee terraform_output.txt
    displayName: 'Executar Terraform para Provisionamento'
  - publish: terraform_output.txt
    artifact: terraform_output
    displayName: 'Publicar Output do Terraform'

# INFO: Lógica não testada utilizando o output do terraform para escrever o inventory do Ansible

- job: ConfigureInfrastructure
  displayName: 'Configurar Infraestrutura com Ansible'
  dependsOn: ProvisionInfrastructure
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - download: current
    artifact: terraform_output
    displayName: 'Baixar Output do Terraform'
  - script: |
      sudo apt-get update
      sudo apt-get install -y ansible
    displayName: 'Instalar Ansible'
  - script: |
      IP=$(grep -oP '(?<="public_ip": ")[^"]*' terraform_output/terraform_output.txt)
      echo "[windows]
$IP ansible_user="usuarioadmin" ansible_password="P@ssw0rd1234!" ansible_connection=winrm ansible_winrm_server_cert_validation=ignore" > devops/ansible/inventory
    displayName: 'Configurar Inventário do Ansible'
  - script: |
      ansible-playbook -i devops/ansible/inventory devops/ansible/playbook.yml
    displayName: 'Executar Playbook Ansible'

## Build

- job: BuildApp
  displayName: 'Build da Aplicação .NET 6 WebAPI'
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '6.x'
    displayName: 'Instalar .NET 6 SDK'

  - script: |
      dotnet restore **/*.sln
      dotnet build **/*.sln --configuration Release
      dotnet publish **/*.sln --configuration Release --output $(Build.ArtifactStagingDirectory)
    displayName: 'Restaurar, Buildar e Publicar Aplicação'

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: drop
    displayName: 'Publicar Artefatos'

## Deploy

- job: DeployToIIS
  displayName: 'Deploy para IIS usando Ansible'
  dependsOn: BuildApp
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - download: current
    artifact: drop
    displayName: 'Baixar Artefatos do Build'
  - script: |
      sudo apt-get update
      sudo apt-get install -y ansible
    displayName: 'Instalar Ansible'
  - script: |
      IP=$(grep -oP '(?<="public_ip": ")[^"]*' terraform_output/terraform_output.txt)
      echo "[windows]
$IP ansible_user="usuarioadmin" ansible_password="P@ssw0rd1234!" ansible_connection=winrm ansible_winrm_server_cert_validation=ignore" > devops/ansible/inventory
    displayName: 'Configurar Inventário do Ansible para Deploy'
  - script: |
      ansible-playbook -i devops/ansible/inventory devops/ansible/deploy_playbook.yml
    displayName: 'Executar Playbook Ansible para Deploy'
